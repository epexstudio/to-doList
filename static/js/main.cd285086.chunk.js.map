{"version":3,"sources":["constants.js","components/BtnTodo.jsx","components/ToDoInput.jsx","components/ToDoItem.jsx","components/ToDoList.jsx","App.js","index.js"],"names":["Selector","All","Completed","ToDo","BtnTodo","props","class","Object","keys","map","item","index","selector","onClick","setSelector","ToDoInput","date","Date","useState","toDo","setToDo","className","value","onChange","e","target","type","placeholder","addToTodoList","id","now","text","status","time","getHours","getMinutes","ToDoItem","obj","updateTodo","name","checked","deleteTodo","ToDoList","toDos","App","setToDos","filterdList","setfilterdList","useEffect","filtedTods","filter","day","getDay","todoItem","selectedType","todoItemId","findIndex","updatedArray","console","log","deletedArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd285086.chunk.js","sourcesContent":["export const Selector = {\r\n    All: \"All\",\r\n    Completed: \"Completed\",\r\n    ToDo: \"To Do\",\r\n  };\r\n  ","import React from \"react\";\r\nimport { Selector } from \"../constants\";\r\n\r\nfunction BtnTodo(props) {\r\n  return (\r\n    <div class=\"buttons\">\r\n      {Object.keys(Selector).map((item,index) => {\r\n        return (\r\n          <button key={item}\r\n            class={`button ${props.selector===Selector[item]?'active':''}`}\r\n            onClick={() => props.setSelector(Selector[item])}\r\n          >\r\n            {Selector[item]}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BtnTodo;\r\n","import React, { useState } from \"react\";\r\nfunction ToDoInput(props) {\r\n  const date = new Date();\r\n  const [toDo, setToDo] = useState(\"\");\r\n  return (\r\n    <div className=\"input\">\r\n      <input\r\n        value={toDo}\r\n        onChange={(e) => setToDo(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"🖍 Add Item....\"\r\n      />\r\n      <i\r\n        onClick={() => {\r\n          props.addToTodoList({ id: Date.now(), text: toDo, status: false, time:date.getHours()+\":\"+date.getMinutes() });\r\n          setToDo(\"\");\r\n        }}\r\n        class=\"fas fa-plus\"\r\n      ></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from 'react';\r\n\r\nfunction ToDoItem(props) {\r\n    return (\r\n        <div key={props.obj.id}>\r\n            <div className={`toDos ${props.obj.status?'completed':'notCompleted'}`}>\r\n              <div className=\"toDo\">\r\n                <input onChange={()=>props.updateTodo(props.obj.id)} type=\"checkbox\" name=\"\" id=\"\" checked={props.obj.status}/>\r\n                <p>{props.obj.text}</p>\r\n                <p className=\"time\">{props.obj.time}</p>\r\n                <i onClick={()=>props.deleteTodo(props.obj.id)} class=\"fas fa-trash-alt\"></i>\r\n              </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoItem\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nfunction ToDoList(props) {\r\n  return (\r\n    <>\r\n      {props.toDos.map((obj) => {\r\n        return (\r\n          <ToDoItem  updateTodo={props.updateTodo} deleteTodo={props.deleteTodo} obj={obj} />\r\n        )\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BtnTodo from \"./components/BtnTodo\";\nimport ToDoInput from \"./components/ToDoInput\";\nimport ToDoList from \"./components/ToDoList\";\nimport { Selector } from \"./constants\";\n\nfunction App() {\n  const [toDos, setToDos] = useState([]);\n\n  const [selector, setSelector] = useState(Selector.All);\n\n  const [filterdList, setfilterdList] = useState([]);\n\n  useEffect(() => {\n    let filtedTods = [...toDos];\n    if (selector === Selector.Completed) {\n      filtedTods = toDos.filter((toDo) => toDo.status);\n    }\n    if (selector === Selector.ToDo) {\n      filtedTods = toDos.filter((toDo) => !toDo.status);\n    }\n    setfilterdList(filtedTods);\n  }, [selector,toDos]);\n\n  function onSelecrtorChange(selectedType) {\n    setSelector(selectedType);\n  }\n\n  function updateTodo(todoItemId) {\n    const index = toDos.findIndex((item) => item.id === todoItemId);\n    const updatedArray = [...toDos];\n    updatedArray[index].status = !updatedArray[index].status;\n    setToDos(updatedArray);\n  }\n\n  function addToTodoList(todoItem) {\n    setToDos([...toDos, todoItem]);\n  }\n\n  function deleteTodo(id){\n    console.log(toDos);\n    const deletedArray = toDos.filter(todoItem=>todoItem.id!==id);\n    setToDos(deletedArray);\n  }\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  var day = days[new Date().getDay()];\n  return (\n    <div className=\"App\">\n      <div className=\"mainHeading\">\n        <h1>To Do List</h1>\n      </div>\n      <div className=\"subHeading\">\n        <h2>Whoop, it's {day} 🥤</h2>\n      </div>\n      <ToDoInput addToTodoList={addToTodoList} />\n      <br />\n      <BtnTodo selector={selector} setSelector={onSelecrtorChange} />\n      <ToDoList\n        selector={selector}\n        toDos={filterdList}\n        updateTodo={updateTodo}\n        deleteTodo={deleteTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}